# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
#box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/

# You can also use services such as databases. Read more on our dev center:
# https://devcenter.wercker.com/administration/services/
# services:
    # - postgres
    # https://devcenter.wercker.com/administration/services/examples/postgresql/

    # - mongo
    # https://devcenter.wercker.com/administration/services/examples/mongodb/
build:
  box: golang
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    # Gets the dependencies
    - script:
        name: go get
        code: |
          go get

    # Build the project
    - script:
        name: go build
        code: |
          go build ./...

    # Test the project NOW WE CANNOT TEST AUTO DUE TO RESTapi testing with client server testing. need to think
    #- script:
    #    name: go test
    #    code: |
    #      go test ./... 
    
    #Copy binary
    - script:
        name: copy binary
        code: 
          cp anypay "$WERCKER_OUTPUT_DIR"


deploy:
    box: alpine
    steps:
    #Copy binary
    - script:
        name: copy openapi 
        code: 
          git clone https://github.com/pvr1/anypay.git --depth 1
          cd pvr1/anypay
          cp openapi.* /

    # use the scratch step to build a container from scratch based on the files present
    - internal/docker-scratch-push:
        username: $USERNAME
        password: $PASSWORD
        cmd: ./anypay
        tag: linux-amd64
        repository: pervonrosen/anypay

#    - internal/docker-build:
#        dockerfile: Dockerfile
#        image-name: my-new-image

#    - internal/docker-push:
#        username: $USERNAME
#        password: $PASSWORD
#        tag: linux-amd64
#        repository: pervonrosen/anypay
